@page "/blog/{filename}"
@using System.IO
@using Markdig
@using BlogSite.Models
@using BlogSite.Clients
@inject IWebHostEnvironment Environment
@inject BlogsClient BlogsClient

<PageTitle>@blog?.Title</PageTitle>

<div class="container mt-4">
    @if (blog != null)
    {
        <h1 class="mb-3">@blog.Title</h1>
        <p class="text-muted mb-4">By @blog.Author on @blog.PublishDate.ToShortDateString()</p>
        <div class="blog-content">
            @((MarkupString)htmlContent)
        </div>
    }
    else
    {
        <h1>Blog Post Not Found</h1>
        <p>Sorry, we couldn't find the blog post you're looking for.</p>
    }
</div>

@code {
    [Parameter]
    public string Filename { get; set; } = "";

    private BlogCard? blog;
    private string htmlContent = "";

    protected override async Task OnInitializedAsync()
    {
        blog = BlogsClient.GetBlogByFilename(Filename);

        if (blog != null)
        {
            var filePath = Path.Combine(Environment.WebRootPath, "blog_posts", $"{Filename}.md");
            
            if (File.Exists(filePath))
            {
                var markdown = await File.ReadAllTextAsync(filePath);
                htmlContent = Markdig.Markdown.ToHtml(markdown);
            }
            else
            {
                htmlContent = "<p>Error: Blog content file not found.</p>";
            }
        }
        else
        {
            htmlContent = "<p>Error: Blog post not found.</p>";
        }
    }
}
